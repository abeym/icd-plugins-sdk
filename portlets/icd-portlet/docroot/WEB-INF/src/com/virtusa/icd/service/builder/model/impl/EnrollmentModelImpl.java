/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.virtusa.icd.service.builder.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.virtusa.icd.service.builder.model.Enrollment;
import com.virtusa.icd.service.builder.model.EnrollmentModel;
import com.virtusa.icd.service.builder.model.EnrollmentSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Enrollment service. Represents a row in the &quot;ICD_Enrollment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.virtusa.icd.service.builder.model.EnrollmentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EnrollmentImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EnrollmentImpl
 * @see com.virtusa.icd.service.builder.model.Enrollment
 * @see com.virtusa.icd.service.builder.model.EnrollmentModel
 * @generated
 */
@JSON(strict = true)
public class EnrollmentModelImpl extends BaseModelImpl<Enrollment>
	implements EnrollmentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a enrollment model instance should use the {@link com.virtusa.icd.service.builder.model.Enrollment} interface instead.
	 */
	public static final String TABLE_NAME = "ICD_Enrollment";
	public static final Object[][] TABLE_COLUMNS = {
			{ "enrollmentId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "selectedEntityType", Types.VARCHAR },
			{ "organizationNPINum", Types.VARCHAR },
			{ "organizationName", Types.VARCHAR },
			{ "organizationAddress1", Types.VARCHAR },
			{ "organizationAddress2", Types.VARCHAR },
			{ "organizationCity", Types.VARCHAR },
			{ "organizationPhone", Types.VARCHAR },
			{ "top5HealthPlansByRev", Types.VARCHAR },
			{ "clearinghouses", Types.VARCHAR },
			{ "ehrBillingVendors", Types.VARCHAR },
			{ "revCycleVendors", Types.VARCHAR },
			{ "top5DrgByRev", Types.VARCHAR },
			{ "icd9Drg1", Types.VARCHAR },
			{ "icd9Drg2", Types.VARCHAR },
			{ "icd9Drg3", Types.VARCHAR },
			{ "icd9Drg4", Types.VARCHAR },
			{ "icd9Drg5", Types.VARCHAR },
			{ "top5Icd9ByRev", Types.VARCHAR },
			{ "icd9Dx1", Types.VARCHAR },
			{ "icd9Dx2", Types.VARCHAR },
			{ "icd9Dx3", Types.VARCHAR },
			{ "icd9Dx4", Types.VARCHAR },
			{ "icd9Dx5", Types.VARCHAR },
			{ "primaryTestingContact", Types.VARCHAR },
			{ "primaryTestingContactTitle", Types.VARCHAR },
			{ "primaryTestingContactPhone", Types.VARCHAR },
			{ "primaryTestingContactEmail", Types.VARCHAR },
			{ "primaryCodingContact", Types.VARCHAR },
			{ "primaryCodingContactTitle", Types.VARCHAR },
			{ "primaryCodingContactPhone", Types.VARCHAR },
			{ "primaryCodingContactEmail", Types.VARCHAR },
			{ "primaryBillingContact", Types.VARCHAR },
			{ "primaryBillingContactTitle", Types.VARCHAR },
			{ "primaryBillingContactPhone", Types.VARCHAR },
			{ "primaryBillingContactEmail", Types.VARCHAR },
			{ "file", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table ICD_Enrollment (enrollmentId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,selectedEntityType VARCHAR(75) null,organizationNPINum VARCHAR(75) null,organizationName VARCHAR(75) null,organizationAddress1 VARCHAR(75) null,organizationAddress2 VARCHAR(75) null,organizationCity VARCHAR(75) null,organizationPhone VARCHAR(75) null,top5HealthPlansByRev VARCHAR(75) null,clearinghouses VARCHAR(75) null,ehrBillingVendors VARCHAR(75) null,revCycleVendors VARCHAR(75) null,top5DrgByRev VARCHAR(75) null,icd9Drg1 VARCHAR(75) null,icd9Drg2 VARCHAR(75) null,icd9Drg3 VARCHAR(75) null,icd9Drg4 VARCHAR(75) null,icd9Drg5 VARCHAR(75) null,top5Icd9ByRev VARCHAR(75) null,icd9Dx1 VARCHAR(75) null,icd9Dx2 VARCHAR(75) null,icd9Dx3 VARCHAR(75) null,icd9Dx4 VARCHAR(75) null,icd9Dx5 VARCHAR(75) null,primaryTestingContact VARCHAR(75) null,primaryTestingContactTitle VARCHAR(75) null,primaryTestingContactPhone VARCHAR(75) null,primaryTestingContactEmail VARCHAR(75) null,primaryCodingContact VARCHAR(75) null,primaryCodingContactTitle VARCHAR(75) null,primaryCodingContactPhone VARCHAR(75) null,primaryCodingContactEmail VARCHAR(75) null,primaryBillingContact VARCHAR(75) null,primaryBillingContactTitle VARCHAR(75) null,primaryBillingContactPhone VARCHAR(75) null,primaryBillingContactEmail VARCHAR(75) null,file VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table ICD_Enrollment";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.virtusa.icd.service.builder.model.Enrollment"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.virtusa.icd.service.builder.model.Enrollment"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Enrollment toModel(EnrollmentSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Enrollment model = new EnrollmentImpl();

		model.setEnrollmentId(soapModel.getEnrollmentId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setSelectedEntityType(soapModel.getSelectedEntityType());
		model.setOrganizationNPINum(soapModel.getOrganizationNPINum());
		model.setOrganizationName(soapModel.getOrganizationName());
		model.setOrganizationAddress1(soapModel.getOrganizationAddress1());
		model.setOrganizationAddress2(soapModel.getOrganizationAddress2());
		model.setOrganizationCity(soapModel.getOrganizationCity());
		model.setOrganizationPhone(soapModel.getOrganizationPhone());
		model.setTop5HealthPlansByRev(soapModel.getTop5HealthPlansByRev());
		model.setClearinghouses(soapModel.getClearinghouses());
		model.setEhrBillingVendors(soapModel.getEhrBillingVendors());
		model.setRevCycleVendors(soapModel.getRevCycleVendors());
		model.setTop5DrgByRev(soapModel.getTop5DrgByRev());
		model.setIcd9Drg1(soapModel.getIcd9Drg1());
		model.setIcd9Drg2(soapModel.getIcd9Drg2());
		model.setIcd9Drg3(soapModel.getIcd9Drg3());
		model.setIcd9Drg4(soapModel.getIcd9Drg4());
		model.setIcd9Drg5(soapModel.getIcd9Drg5());
		model.setTop5Icd9ByRev(soapModel.getTop5Icd9ByRev());
		model.setIcd9Dx1(soapModel.getIcd9Dx1());
		model.setIcd9Dx2(soapModel.getIcd9Dx2());
		model.setIcd9Dx3(soapModel.getIcd9Dx3());
		model.setIcd9Dx4(soapModel.getIcd9Dx4());
		model.setIcd9Dx5(soapModel.getIcd9Dx5());
		model.setPrimaryTestingContact(soapModel.getPrimaryTestingContact());
		model.setPrimaryTestingContactTitle(soapModel.getPrimaryTestingContactTitle());
		model.setPrimaryTestingContactPhone(soapModel.getPrimaryTestingContactPhone());
		model.setPrimaryTestingContactEmail(soapModel.getPrimaryTestingContactEmail());
		model.setPrimaryCodingContact(soapModel.getPrimaryCodingContact());
		model.setPrimaryCodingContactTitle(soapModel.getPrimaryCodingContactTitle());
		model.setPrimaryCodingContactPhone(soapModel.getPrimaryCodingContactPhone());
		model.setPrimaryCodingContactEmail(soapModel.getPrimaryCodingContactEmail());
		model.setPrimaryBillingContact(soapModel.getPrimaryBillingContact());
		model.setPrimaryBillingContactTitle(soapModel.getPrimaryBillingContactTitle());
		model.setPrimaryBillingContactPhone(soapModel.getPrimaryBillingContactPhone());
		model.setPrimaryBillingContactEmail(soapModel.getPrimaryBillingContactEmail());
		model.setFile(soapModel.getFile());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Enrollment> toModels(EnrollmentSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Enrollment> models = new ArrayList<Enrollment>(soapModels.length);

		for (EnrollmentSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.virtusa.icd.service.builder.model.Enrollment"));

	public EnrollmentModelImpl() {
	}

	public long getPrimaryKey() {
		return _enrollmentId;
	}

	public void setPrimaryKey(long primaryKey) {
		setEnrollmentId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_enrollmentId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Enrollment.class;
	}

	public String getModelClassName() {
		return Enrollment.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("enrollmentId", getEnrollmentId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("selectedEntityType", getSelectedEntityType());
		attributes.put("organizationNPINum", getOrganizationNPINum());
		attributes.put("organizationName", getOrganizationName());
		attributes.put("organizationAddress1", getOrganizationAddress1());
		attributes.put("organizationAddress2", getOrganizationAddress2());
		attributes.put("organizationCity", getOrganizationCity());
		attributes.put("organizationPhone", getOrganizationPhone());
		attributes.put("top5HealthPlansByRev", getTop5HealthPlansByRev());
		attributes.put("clearinghouses", getClearinghouses());
		attributes.put("ehrBillingVendors", getEhrBillingVendors());
		attributes.put("revCycleVendors", getRevCycleVendors());
		attributes.put("top5DrgByRev", getTop5DrgByRev());
		attributes.put("icd9Drg1", getIcd9Drg1());
		attributes.put("icd9Drg2", getIcd9Drg2());
		attributes.put("icd9Drg3", getIcd9Drg3());
		attributes.put("icd9Drg4", getIcd9Drg4());
		attributes.put("icd9Drg5", getIcd9Drg5());
		attributes.put("top5Icd9ByRev", getTop5Icd9ByRev());
		attributes.put("icd9Dx1", getIcd9Dx1());
		attributes.put("icd9Dx2", getIcd9Dx2());
		attributes.put("icd9Dx3", getIcd9Dx3());
		attributes.put("icd9Dx4", getIcd9Dx4());
		attributes.put("icd9Dx5", getIcd9Dx5());
		attributes.put("primaryTestingContact", getPrimaryTestingContact());
		attributes.put("primaryTestingContactTitle",
			getPrimaryTestingContactTitle());
		attributes.put("primaryTestingContactPhone",
			getPrimaryTestingContactPhone());
		attributes.put("primaryTestingContactEmail",
			getPrimaryTestingContactEmail());
		attributes.put("primaryCodingContact", getPrimaryCodingContact());
		attributes.put("primaryCodingContactTitle",
			getPrimaryCodingContactTitle());
		attributes.put("primaryCodingContactPhone",
			getPrimaryCodingContactPhone());
		attributes.put("primaryCodingContactEmail",
			getPrimaryCodingContactEmail());
		attributes.put("primaryBillingContact", getPrimaryBillingContact());
		attributes.put("primaryBillingContactTitle",
			getPrimaryBillingContactTitle());
		attributes.put("primaryBillingContactPhone",
			getPrimaryBillingContactPhone());
		attributes.put("primaryBillingContactEmail",
			getPrimaryBillingContactEmail());
		attributes.put("file", getFile());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long enrollmentId = (Long)attributes.get("enrollmentId");

		if (enrollmentId != null) {
			setEnrollmentId(enrollmentId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String selectedEntityType = (String)attributes.get("selectedEntityType");

		if (selectedEntityType != null) {
			setSelectedEntityType(selectedEntityType);
		}

		String organizationNPINum = (String)attributes.get("organizationNPINum");

		if (organizationNPINum != null) {
			setOrganizationNPINum(organizationNPINum);
		}

		String organizationName = (String)attributes.get("organizationName");

		if (organizationName != null) {
			setOrganizationName(organizationName);
		}

		String organizationAddress1 = (String)attributes.get(
				"organizationAddress1");

		if (organizationAddress1 != null) {
			setOrganizationAddress1(organizationAddress1);
		}

		String organizationAddress2 = (String)attributes.get(
				"organizationAddress2");

		if (organizationAddress2 != null) {
			setOrganizationAddress2(organizationAddress2);
		}

		String organizationCity = (String)attributes.get("organizationCity");

		if (organizationCity != null) {
			setOrganizationCity(organizationCity);
		}

		String organizationPhone = (String)attributes.get("organizationPhone");

		if (organizationPhone != null) {
			setOrganizationPhone(organizationPhone);
		}

		String top5HealthPlansByRev = (String)attributes.get(
				"top5HealthPlansByRev");

		if (top5HealthPlansByRev != null) {
			setTop5HealthPlansByRev(top5HealthPlansByRev);
		}

		String clearinghouses = (String)attributes.get("clearinghouses");

		if (clearinghouses != null) {
			setClearinghouses(clearinghouses);
		}

		String ehrBillingVendors = (String)attributes.get("ehrBillingVendors");

		if (ehrBillingVendors != null) {
			setEhrBillingVendors(ehrBillingVendors);
		}

		String revCycleVendors = (String)attributes.get("revCycleVendors");

		if (revCycleVendors != null) {
			setRevCycleVendors(revCycleVendors);
		}

		String top5DrgByRev = (String)attributes.get("top5DrgByRev");

		if (top5DrgByRev != null) {
			setTop5DrgByRev(top5DrgByRev);
		}

		String icd9Drg1 = (String)attributes.get("icd9Drg1");

		if (icd9Drg1 != null) {
			setIcd9Drg1(icd9Drg1);
		}

		String icd9Drg2 = (String)attributes.get("icd9Drg2");

		if (icd9Drg2 != null) {
			setIcd9Drg2(icd9Drg2);
		}

		String icd9Drg3 = (String)attributes.get("icd9Drg3");

		if (icd9Drg3 != null) {
			setIcd9Drg3(icd9Drg3);
		}

		String icd9Drg4 = (String)attributes.get("icd9Drg4");

		if (icd9Drg4 != null) {
			setIcd9Drg4(icd9Drg4);
		}

		String icd9Drg5 = (String)attributes.get("icd9Drg5");

		if (icd9Drg5 != null) {
			setIcd9Drg5(icd9Drg5);
		}

		String top5Icd9ByRev = (String)attributes.get("top5Icd9ByRev");

		if (top5Icd9ByRev != null) {
			setTop5Icd9ByRev(top5Icd9ByRev);
		}

		String icd9Dx1 = (String)attributes.get("icd9Dx1");

		if (icd9Dx1 != null) {
			setIcd9Dx1(icd9Dx1);
		}

		String icd9Dx2 = (String)attributes.get("icd9Dx2");

		if (icd9Dx2 != null) {
			setIcd9Dx2(icd9Dx2);
		}

		String icd9Dx3 = (String)attributes.get("icd9Dx3");

		if (icd9Dx3 != null) {
			setIcd9Dx3(icd9Dx3);
		}

		String icd9Dx4 = (String)attributes.get("icd9Dx4");

		if (icd9Dx4 != null) {
			setIcd9Dx4(icd9Dx4);
		}

		String icd9Dx5 = (String)attributes.get("icd9Dx5");

		if (icd9Dx5 != null) {
			setIcd9Dx5(icd9Dx5);
		}

		String primaryTestingContact = (String)attributes.get(
				"primaryTestingContact");

		if (primaryTestingContact != null) {
			setPrimaryTestingContact(primaryTestingContact);
		}

		String primaryTestingContactTitle = (String)attributes.get(
				"primaryTestingContactTitle");

		if (primaryTestingContactTitle != null) {
			setPrimaryTestingContactTitle(primaryTestingContactTitle);
		}

		String primaryTestingContactPhone = (String)attributes.get(
				"primaryTestingContactPhone");

		if (primaryTestingContactPhone != null) {
			setPrimaryTestingContactPhone(primaryTestingContactPhone);
		}

		String primaryTestingContactEmail = (String)attributes.get(
				"primaryTestingContactEmail");

		if (primaryTestingContactEmail != null) {
			setPrimaryTestingContactEmail(primaryTestingContactEmail);
		}

		String primaryCodingContact = (String)attributes.get(
				"primaryCodingContact");

		if (primaryCodingContact != null) {
			setPrimaryCodingContact(primaryCodingContact);
		}

		String primaryCodingContactTitle = (String)attributes.get(
				"primaryCodingContactTitle");

		if (primaryCodingContactTitle != null) {
			setPrimaryCodingContactTitle(primaryCodingContactTitle);
		}

		String primaryCodingContactPhone = (String)attributes.get(
				"primaryCodingContactPhone");

		if (primaryCodingContactPhone != null) {
			setPrimaryCodingContactPhone(primaryCodingContactPhone);
		}

		String primaryCodingContactEmail = (String)attributes.get(
				"primaryCodingContactEmail");

		if (primaryCodingContactEmail != null) {
			setPrimaryCodingContactEmail(primaryCodingContactEmail);
		}

		String primaryBillingContact = (String)attributes.get(
				"primaryBillingContact");

		if (primaryBillingContact != null) {
			setPrimaryBillingContact(primaryBillingContact);
		}

		String primaryBillingContactTitle = (String)attributes.get(
				"primaryBillingContactTitle");

		if (primaryBillingContactTitle != null) {
			setPrimaryBillingContactTitle(primaryBillingContactTitle);
		}

		String primaryBillingContactPhone = (String)attributes.get(
				"primaryBillingContactPhone");

		if (primaryBillingContactPhone != null) {
			setPrimaryBillingContactPhone(primaryBillingContactPhone);
		}

		String primaryBillingContactEmail = (String)attributes.get(
				"primaryBillingContactEmail");

		if (primaryBillingContactEmail != null) {
			setPrimaryBillingContactEmail(primaryBillingContactEmail);
		}

		String file = (String)attributes.get("file");

		if (file != null) {
			setFile(file);
		}
	}

	@JSON
	public long getEnrollmentId() {
		return _enrollmentId;
	}

	public void setEnrollmentId(long enrollmentId) {
		_enrollmentId = enrollmentId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public String getSelectedEntityType() {
		if (_selectedEntityType == null) {
			return StringPool.BLANK;
		}
		else {
			return _selectedEntityType;
		}
	}

	public void setSelectedEntityType(String selectedEntityType) {
		_selectedEntityType = selectedEntityType;
	}

	@JSON
	public String getOrganizationNPINum() {
		if (_organizationNPINum == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizationNPINum;
		}
	}

	public void setOrganizationNPINum(String organizationNPINum) {
		_organizationNPINum = organizationNPINum;
	}

	@JSON
	public String getOrganizationName() {
		if (_organizationName == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizationName;
		}
	}

	public void setOrganizationName(String organizationName) {
		_organizationName = organizationName;
	}

	@JSON
	public String getOrganizationAddress1() {
		if (_organizationAddress1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizationAddress1;
		}
	}

	public void setOrganizationAddress1(String organizationAddress1) {
		_organizationAddress1 = organizationAddress1;
	}

	@JSON
	public String getOrganizationAddress2() {
		if (_organizationAddress2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizationAddress2;
		}
	}

	public void setOrganizationAddress2(String organizationAddress2) {
		_organizationAddress2 = organizationAddress2;
	}

	@JSON
	public String getOrganizationCity() {
		if (_organizationCity == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizationCity;
		}
	}

	public void setOrganizationCity(String organizationCity) {
		_organizationCity = organizationCity;
	}

	@JSON
	public String getOrganizationPhone() {
		if (_organizationPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizationPhone;
		}
	}

	public void setOrganizationPhone(String organizationPhone) {
		_organizationPhone = organizationPhone;
	}

	@JSON
	public String getTop5HealthPlansByRev() {
		if (_top5HealthPlansByRev == null) {
			return StringPool.BLANK;
		}
		else {
			return _top5HealthPlansByRev;
		}
	}

	public void setTop5HealthPlansByRev(String top5HealthPlansByRev) {
		_top5HealthPlansByRev = top5HealthPlansByRev;
	}

	@JSON
	public String getClearinghouses() {
		if (_clearinghouses == null) {
			return StringPool.BLANK;
		}
		else {
			return _clearinghouses;
		}
	}

	public void setClearinghouses(String clearinghouses) {
		_clearinghouses = clearinghouses;
	}

	@JSON
	public String getEhrBillingVendors() {
		if (_ehrBillingVendors == null) {
			return StringPool.BLANK;
		}
		else {
			return _ehrBillingVendors;
		}
	}

	public void setEhrBillingVendors(String ehrBillingVendors) {
		_ehrBillingVendors = ehrBillingVendors;
	}

	@JSON
	public String getRevCycleVendors() {
		if (_revCycleVendors == null) {
			return StringPool.BLANK;
		}
		else {
			return _revCycleVendors;
		}
	}

	public void setRevCycleVendors(String revCycleVendors) {
		_revCycleVendors = revCycleVendors;
	}

	@JSON
	public String getTop5DrgByRev() {
		if (_top5DrgByRev == null) {
			return StringPool.BLANK;
		}
		else {
			return _top5DrgByRev;
		}
	}

	public void setTop5DrgByRev(String top5DrgByRev) {
		_top5DrgByRev = top5DrgByRev;
	}

	@JSON
	public String getIcd9Drg1() {
		if (_icd9Drg1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _icd9Drg1;
		}
	}

	public void setIcd9Drg1(String icd9Drg1) {
		_icd9Drg1 = icd9Drg1;
	}

	@JSON
	public String getIcd9Drg2() {
		if (_icd9Drg2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _icd9Drg2;
		}
	}

	public void setIcd9Drg2(String icd9Drg2) {
		_icd9Drg2 = icd9Drg2;
	}

	@JSON
	public String getIcd9Drg3() {
		if (_icd9Drg3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _icd9Drg3;
		}
	}

	public void setIcd9Drg3(String icd9Drg3) {
		_icd9Drg3 = icd9Drg3;
	}

	@JSON
	public String getIcd9Drg4() {
		if (_icd9Drg4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _icd9Drg4;
		}
	}

	public void setIcd9Drg4(String icd9Drg4) {
		_icd9Drg4 = icd9Drg4;
	}

	@JSON
	public String getIcd9Drg5() {
		if (_icd9Drg5 == null) {
			return StringPool.BLANK;
		}
		else {
			return _icd9Drg5;
		}
	}

	public void setIcd9Drg5(String icd9Drg5) {
		_icd9Drg5 = icd9Drg5;
	}

	@JSON
	public String getTop5Icd9ByRev() {
		if (_top5Icd9ByRev == null) {
			return StringPool.BLANK;
		}
		else {
			return _top5Icd9ByRev;
		}
	}

	public void setTop5Icd9ByRev(String top5Icd9ByRev) {
		_top5Icd9ByRev = top5Icd9ByRev;
	}

	@JSON
	public String getIcd9Dx1() {
		if (_icd9Dx1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _icd9Dx1;
		}
	}

	public void setIcd9Dx1(String icd9Dx1) {
		_icd9Dx1 = icd9Dx1;
	}

	@JSON
	public String getIcd9Dx2() {
		if (_icd9Dx2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _icd9Dx2;
		}
	}

	public void setIcd9Dx2(String icd9Dx2) {
		_icd9Dx2 = icd9Dx2;
	}

	@JSON
	public String getIcd9Dx3() {
		if (_icd9Dx3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _icd9Dx3;
		}
	}

	public void setIcd9Dx3(String icd9Dx3) {
		_icd9Dx3 = icd9Dx3;
	}

	@JSON
	public String getIcd9Dx4() {
		if (_icd9Dx4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _icd9Dx4;
		}
	}

	public void setIcd9Dx4(String icd9Dx4) {
		_icd9Dx4 = icd9Dx4;
	}

	@JSON
	public String getIcd9Dx5() {
		if (_icd9Dx5 == null) {
			return StringPool.BLANK;
		}
		else {
			return _icd9Dx5;
		}
	}

	public void setIcd9Dx5(String icd9Dx5) {
		_icd9Dx5 = icd9Dx5;
	}

	@JSON
	public String getPrimaryTestingContact() {
		if (_primaryTestingContact == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryTestingContact;
		}
	}

	public void setPrimaryTestingContact(String primaryTestingContact) {
		_primaryTestingContact = primaryTestingContact;
	}

	@JSON
	public String getPrimaryTestingContactTitle() {
		if (_primaryTestingContactTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryTestingContactTitle;
		}
	}

	public void setPrimaryTestingContactTitle(String primaryTestingContactTitle) {
		_primaryTestingContactTitle = primaryTestingContactTitle;
	}

	@JSON
	public String getPrimaryTestingContactPhone() {
		if (_primaryTestingContactPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryTestingContactPhone;
		}
	}

	public void setPrimaryTestingContactPhone(String primaryTestingContactPhone) {
		_primaryTestingContactPhone = primaryTestingContactPhone;
	}

	@JSON
	public String getPrimaryTestingContactEmail() {
		if (_primaryTestingContactEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryTestingContactEmail;
		}
	}

	public void setPrimaryTestingContactEmail(String primaryTestingContactEmail) {
		_primaryTestingContactEmail = primaryTestingContactEmail;
	}

	@JSON
	public String getPrimaryCodingContact() {
		if (_primaryCodingContact == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryCodingContact;
		}
	}

	public void setPrimaryCodingContact(String primaryCodingContact) {
		_primaryCodingContact = primaryCodingContact;
	}

	@JSON
	public String getPrimaryCodingContactTitle() {
		if (_primaryCodingContactTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryCodingContactTitle;
		}
	}

	public void setPrimaryCodingContactTitle(String primaryCodingContactTitle) {
		_primaryCodingContactTitle = primaryCodingContactTitle;
	}

	@JSON
	public String getPrimaryCodingContactPhone() {
		if (_primaryCodingContactPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryCodingContactPhone;
		}
	}

	public void setPrimaryCodingContactPhone(String primaryCodingContactPhone) {
		_primaryCodingContactPhone = primaryCodingContactPhone;
	}

	@JSON
	public String getPrimaryCodingContactEmail() {
		if (_primaryCodingContactEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryCodingContactEmail;
		}
	}

	public void setPrimaryCodingContactEmail(String primaryCodingContactEmail) {
		_primaryCodingContactEmail = primaryCodingContactEmail;
	}

	@JSON
	public String getPrimaryBillingContact() {
		if (_primaryBillingContact == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryBillingContact;
		}
	}

	public void setPrimaryBillingContact(String primaryBillingContact) {
		_primaryBillingContact = primaryBillingContact;
	}

	@JSON
	public String getPrimaryBillingContactTitle() {
		if (_primaryBillingContactTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryBillingContactTitle;
		}
	}

	public void setPrimaryBillingContactTitle(String primaryBillingContactTitle) {
		_primaryBillingContactTitle = primaryBillingContactTitle;
	}

	@JSON
	public String getPrimaryBillingContactPhone() {
		if (_primaryBillingContactPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryBillingContactPhone;
		}
	}

	public void setPrimaryBillingContactPhone(String primaryBillingContactPhone) {
		_primaryBillingContactPhone = primaryBillingContactPhone;
	}

	@JSON
	public String getPrimaryBillingContactEmail() {
		if (_primaryBillingContactEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryBillingContactEmail;
		}
	}

	public void setPrimaryBillingContactEmail(String primaryBillingContactEmail) {
		_primaryBillingContactEmail = primaryBillingContactEmail;
	}

	@JSON
	public String getFile() {
		if (_file == null) {
			return StringPool.BLANK;
		}
		else {
			return _file;
		}
	}

	public void setFile(String file) {
		_file = file;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Enrollment.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Enrollment toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Enrollment)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		EnrollmentImpl enrollmentImpl = new EnrollmentImpl();

		enrollmentImpl.setEnrollmentId(getEnrollmentId());
		enrollmentImpl.setGroupId(getGroupId());
		enrollmentImpl.setCompanyId(getCompanyId());
		enrollmentImpl.setUserId(getUserId());
		enrollmentImpl.setUserName(getUserName());
		enrollmentImpl.setCreateDate(getCreateDate());
		enrollmentImpl.setModifiedDate(getModifiedDate());
		enrollmentImpl.setSelectedEntityType(getSelectedEntityType());
		enrollmentImpl.setOrganizationNPINum(getOrganizationNPINum());
		enrollmentImpl.setOrganizationName(getOrganizationName());
		enrollmentImpl.setOrganizationAddress1(getOrganizationAddress1());
		enrollmentImpl.setOrganizationAddress2(getOrganizationAddress2());
		enrollmentImpl.setOrganizationCity(getOrganizationCity());
		enrollmentImpl.setOrganizationPhone(getOrganizationPhone());
		enrollmentImpl.setTop5HealthPlansByRev(getTop5HealthPlansByRev());
		enrollmentImpl.setClearinghouses(getClearinghouses());
		enrollmentImpl.setEhrBillingVendors(getEhrBillingVendors());
		enrollmentImpl.setRevCycleVendors(getRevCycleVendors());
		enrollmentImpl.setTop5DrgByRev(getTop5DrgByRev());
		enrollmentImpl.setIcd9Drg1(getIcd9Drg1());
		enrollmentImpl.setIcd9Drg2(getIcd9Drg2());
		enrollmentImpl.setIcd9Drg3(getIcd9Drg3());
		enrollmentImpl.setIcd9Drg4(getIcd9Drg4());
		enrollmentImpl.setIcd9Drg5(getIcd9Drg5());
		enrollmentImpl.setTop5Icd9ByRev(getTop5Icd9ByRev());
		enrollmentImpl.setIcd9Dx1(getIcd9Dx1());
		enrollmentImpl.setIcd9Dx2(getIcd9Dx2());
		enrollmentImpl.setIcd9Dx3(getIcd9Dx3());
		enrollmentImpl.setIcd9Dx4(getIcd9Dx4());
		enrollmentImpl.setIcd9Dx5(getIcd9Dx5());
		enrollmentImpl.setPrimaryTestingContact(getPrimaryTestingContact());
		enrollmentImpl.setPrimaryTestingContactTitle(getPrimaryTestingContactTitle());
		enrollmentImpl.setPrimaryTestingContactPhone(getPrimaryTestingContactPhone());
		enrollmentImpl.setPrimaryTestingContactEmail(getPrimaryTestingContactEmail());
		enrollmentImpl.setPrimaryCodingContact(getPrimaryCodingContact());
		enrollmentImpl.setPrimaryCodingContactTitle(getPrimaryCodingContactTitle());
		enrollmentImpl.setPrimaryCodingContactPhone(getPrimaryCodingContactPhone());
		enrollmentImpl.setPrimaryCodingContactEmail(getPrimaryCodingContactEmail());
		enrollmentImpl.setPrimaryBillingContact(getPrimaryBillingContact());
		enrollmentImpl.setPrimaryBillingContactTitle(getPrimaryBillingContactTitle());
		enrollmentImpl.setPrimaryBillingContactPhone(getPrimaryBillingContactPhone());
		enrollmentImpl.setPrimaryBillingContactEmail(getPrimaryBillingContactEmail());
		enrollmentImpl.setFile(getFile());

		enrollmentImpl.resetOriginalValues();

		return enrollmentImpl;
	}

	public int compareTo(Enrollment enrollment) {
		long primaryKey = enrollment.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Enrollment enrollment = null;

		try {
			enrollment = (Enrollment)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = enrollment.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Enrollment> toCacheModel() {
		EnrollmentCacheModel enrollmentCacheModel = new EnrollmentCacheModel();

		enrollmentCacheModel.enrollmentId = getEnrollmentId();

		enrollmentCacheModel.groupId = getGroupId();

		enrollmentCacheModel.companyId = getCompanyId();

		enrollmentCacheModel.userId = getUserId();

		enrollmentCacheModel.userName = getUserName();

		String userName = enrollmentCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			enrollmentCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			enrollmentCacheModel.createDate = createDate.getTime();
		}
		else {
			enrollmentCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			enrollmentCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			enrollmentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		enrollmentCacheModel.selectedEntityType = getSelectedEntityType();

		String selectedEntityType = enrollmentCacheModel.selectedEntityType;

		if ((selectedEntityType != null) && (selectedEntityType.length() == 0)) {
			enrollmentCacheModel.selectedEntityType = null;
		}

		enrollmentCacheModel.organizationNPINum = getOrganizationNPINum();

		String organizationNPINum = enrollmentCacheModel.organizationNPINum;

		if ((organizationNPINum != null) && (organizationNPINum.length() == 0)) {
			enrollmentCacheModel.organizationNPINum = null;
		}

		enrollmentCacheModel.organizationName = getOrganizationName();

		String organizationName = enrollmentCacheModel.organizationName;

		if ((organizationName != null) && (organizationName.length() == 0)) {
			enrollmentCacheModel.organizationName = null;
		}

		enrollmentCacheModel.organizationAddress1 = getOrganizationAddress1();

		String organizationAddress1 = enrollmentCacheModel.organizationAddress1;

		if ((organizationAddress1 != null) &&
				(organizationAddress1.length() == 0)) {
			enrollmentCacheModel.organizationAddress1 = null;
		}

		enrollmentCacheModel.organizationAddress2 = getOrganizationAddress2();

		String organizationAddress2 = enrollmentCacheModel.organizationAddress2;

		if ((organizationAddress2 != null) &&
				(organizationAddress2.length() == 0)) {
			enrollmentCacheModel.organizationAddress2 = null;
		}

		enrollmentCacheModel.organizationCity = getOrganizationCity();

		String organizationCity = enrollmentCacheModel.organizationCity;

		if ((organizationCity != null) && (organizationCity.length() == 0)) {
			enrollmentCacheModel.organizationCity = null;
		}

		enrollmentCacheModel.organizationPhone = getOrganizationPhone();

		String organizationPhone = enrollmentCacheModel.organizationPhone;

		if ((organizationPhone != null) && (organizationPhone.length() == 0)) {
			enrollmentCacheModel.organizationPhone = null;
		}

		enrollmentCacheModel.top5HealthPlansByRev = getTop5HealthPlansByRev();

		String top5HealthPlansByRev = enrollmentCacheModel.top5HealthPlansByRev;

		if ((top5HealthPlansByRev != null) &&
				(top5HealthPlansByRev.length() == 0)) {
			enrollmentCacheModel.top5HealthPlansByRev = null;
		}

		enrollmentCacheModel.clearinghouses = getClearinghouses();

		String clearinghouses = enrollmentCacheModel.clearinghouses;

		if ((clearinghouses != null) && (clearinghouses.length() == 0)) {
			enrollmentCacheModel.clearinghouses = null;
		}

		enrollmentCacheModel.ehrBillingVendors = getEhrBillingVendors();

		String ehrBillingVendors = enrollmentCacheModel.ehrBillingVendors;

		if ((ehrBillingVendors != null) && (ehrBillingVendors.length() == 0)) {
			enrollmentCacheModel.ehrBillingVendors = null;
		}

		enrollmentCacheModel.revCycleVendors = getRevCycleVendors();

		String revCycleVendors = enrollmentCacheModel.revCycleVendors;

		if ((revCycleVendors != null) && (revCycleVendors.length() == 0)) {
			enrollmentCacheModel.revCycleVendors = null;
		}

		enrollmentCacheModel.top5DrgByRev = getTop5DrgByRev();

		String top5DrgByRev = enrollmentCacheModel.top5DrgByRev;

		if ((top5DrgByRev != null) && (top5DrgByRev.length() == 0)) {
			enrollmentCacheModel.top5DrgByRev = null;
		}

		enrollmentCacheModel.icd9Drg1 = getIcd9Drg1();

		String icd9Drg1 = enrollmentCacheModel.icd9Drg1;

		if ((icd9Drg1 != null) && (icd9Drg1.length() == 0)) {
			enrollmentCacheModel.icd9Drg1 = null;
		}

		enrollmentCacheModel.icd9Drg2 = getIcd9Drg2();

		String icd9Drg2 = enrollmentCacheModel.icd9Drg2;

		if ((icd9Drg2 != null) && (icd9Drg2.length() == 0)) {
			enrollmentCacheModel.icd9Drg2 = null;
		}

		enrollmentCacheModel.icd9Drg3 = getIcd9Drg3();

		String icd9Drg3 = enrollmentCacheModel.icd9Drg3;

		if ((icd9Drg3 != null) && (icd9Drg3.length() == 0)) {
			enrollmentCacheModel.icd9Drg3 = null;
		}

		enrollmentCacheModel.icd9Drg4 = getIcd9Drg4();

		String icd9Drg4 = enrollmentCacheModel.icd9Drg4;

		if ((icd9Drg4 != null) && (icd9Drg4.length() == 0)) {
			enrollmentCacheModel.icd9Drg4 = null;
		}

		enrollmentCacheModel.icd9Drg5 = getIcd9Drg5();

		String icd9Drg5 = enrollmentCacheModel.icd9Drg5;

		if ((icd9Drg5 != null) && (icd9Drg5.length() == 0)) {
			enrollmentCacheModel.icd9Drg5 = null;
		}

		enrollmentCacheModel.top5Icd9ByRev = getTop5Icd9ByRev();

		String top5Icd9ByRev = enrollmentCacheModel.top5Icd9ByRev;

		if ((top5Icd9ByRev != null) && (top5Icd9ByRev.length() == 0)) {
			enrollmentCacheModel.top5Icd9ByRev = null;
		}

		enrollmentCacheModel.icd9Dx1 = getIcd9Dx1();

		String icd9Dx1 = enrollmentCacheModel.icd9Dx1;

		if ((icd9Dx1 != null) && (icd9Dx1.length() == 0)) {
			enrollmentCacheModel.icd9Dx1 = null;
		}

		enrollmentCacheModel.icd9Dx2 = getIcd9Dx2();

		String icd9Dx2 = enrollmentCacheModel.icd9Dx2;

		if ((icd9Dx2 != null) && (icd9Dx2.length() == 0)) {
			enrollmentCacheModel.icd9Dx2 = null;
		}

		enrollmentCacheModel.icd9Dx3 = getIcd9Dx3();

		String icd9Dx3 = enrollmentCacheModel.icd9Dx3;

		if ((icd9Dx3 != null) && (icd9Dx3.length() == 0)) {
			enrollmentCacheModel.icd9Dx3 = null;
		}

		enrollmentCacheModel.icd9Dx4 = getIcd9Dx4();

		String icd9Dx4 = enrollmentCacheModel.icd9Dx4;

		if ((icd9Dx4 != null) && (icd9Dx4.length() == 0)) {
			enrollmentCacheModel.icd9Dx4 = null;
		}

		enrollmentCacheModel.icd9Dx5 = getIcd9Dx5();

		String icd9Dx5 = enrollmentCacheModel.icd9Dx5;

		if ((icd9Dx5 != null) && (icd9Dx5.length() == 0)) {
			enrollmentCacheModel.icd9Dx5 = null;
		}

		enrollmentCacheModel.primaryTestingContact = getPrimaryTestingContact();

		String primaryTestingContact = enrollmentCacheModel.primaryTestingContact;

		if ((primaryTestingContact != null) &&
				(primaryTestingContact.length() == 0)) {
			enrollmentCacheModel.primaryTestingContact = null;
		}

		enrollmentCacheModel.primaryTestingContactTitle = getPrimaryTestingContactTitle();

		String primaryTestingContactTitle = enrollmentCacheModel.primaryTestingContactTitle;

		if ((primaryTestingContactTitle != null) &&
				(primaryTestingContactTitle.length() == 0)) {
			enrollmentCacheModel.primaryTestingContactTitle = null;
		}

		enrollmentCacheModel.primaryTestingContactPhone = getPrimaryTestingContactPhone();

		String primaryTestingContactPhone = enrollmentCacheModel.primaryTestingContactPhone;

		if ((primaryTestingContactPhone != null) &&
				(primaryTestingContactPhone.length() == 0)) {
			enrollmentCacheModel.primaryTestingContactPhone = null;
		}

		enrollmentCacheModel.primaryTestingContactEmail = getPrimaryTestingContactEmail();

		String primaryTestingContactEmail = enrollmentCacheModel.primaryTestingContactEmail;

		if ((primaryTestingContactEmail != null) &&
				(primaryTestingContactEmail.length() == 0)) {
			enrollmentCacheModel.primaryTestingContactEmail = null;
		}

		enrollmentCacheModel.primaryCodingContact = getPrimaryCodingContact();

		String primaryCodingContact = enrollmentCacheModel.primaryCodingContact;

		if ((primaryCodingContact != null) &&
				(primaryCodingContact.length() == 0)) {
			enrollmentCacheModel.primaryCodingContact = null;
		}

		enrollmentCacheModel.primaryCodingContactTitle = getPrimaryCodingContactTitle();

		String primaryCodingContactTitle = enrollmentCacheModel.primaryCodingContactTitle;

		if ((primaryCodingContactTitle != null) &&
				(primaryCodingContactTitle.length() == 0)) {
			enrollmentCacheModel.primaryCodingContactTitle = null;
		}

		enrollmentCacheModel.primaryCodingContactPhone = getPrimaryCodingContactPhone();

		String primaryCodingContactPhone = enrollmentCacheModel.primaryCodingContactPhone;

		if ((primaryCodingContactPhone != null) &&
				(primaryCodingContactPhone.length() == 0)) {
			enrollmentCacheModel.primaryCodingContactPhone = null;
		}

		enrollmentCacheModel.primaryCodingContactEmail = getPrimaryCodingContactEmail();

		String primaryCodingContactEmail = enrollmentCacheModel.primaryCodingContactEmail;

		if ((primaryCodingContactEmail != null) &&
				(primaryCodingContactEmail.length() == 0)) {
			enrollmentCacheModel.primaryCodingContactEmail = null;
		}

		enrollmentCacheModel.primaryBillingContact = getPrimaryBillingContact();

		String primaryBillingContact = enrollmentCacheModel.primaryBillingContact;

		if ((primaryBillingContact != null) &&
				(primaryBillingContact.length() == 0)) {
			enrollmentCacheModel.primaryBillingContact = null;
		}

		enrollmentCacheModel.primaryBillingContactTitle = getPrimaryBillingContactTitle();

		String primaryBillingContactTitle = enrollmentCacheModel.primaryBillingContactTitle;

		if ((primaryBillingContactTitle != null) &&
				(primaryBillingContactTitle.length() == 0)) {
			enrollmentCacheModel.primaryBillingContactTitle = null;
		}

		enrollmentCacheModel.primaryBillingContactPhone = getPrimaryBillingContactPhone();

		String primaryBillingContactPhone = enrollmentCacheModel.primaryBillingContactPhone;

		if ((primaryBillingContactPhone != null) &&
				(primaryBillingContactPhone.length() == 0)) {
			enrollmentCacheModel.primaryBillingContactPhone = null;
		}

		enrollmentCacheModel.primaryBillingContactEmail = getPrimaryBillingContactEmail();

		String primaryBillingContactEmail = enrollmentCacheModel.primaryBillingContactEmail;

		if ((primaryBillingContactEmail != null) &&
				(primaryBillingContactEmail.length() == 0)) {
			enrollmentCacheModel.primaryBillingContactEmail = null;
		}

		enrollmentCacheModel.file = getFile();

		String file = enrollmentCacheModel.file;

		if ((file != null) && (file.length() == 0)) {
			enrollmentCacheModel.file = null;
		}

		return enrollmentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(87);

		sb.append("{enrollmentId=");
		sb.append(getEnrollmentId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", selectedEntityType=");
		sb.append(getSelectedEntityType());
		sb.append(", organizationNPINum=");
		sb.append(getOrganizationNPINum());
		sb.append(", organizationName=");
		sb.append(getOrganizationName());
		sb.append(", organizationAddress1=");
		sb.append(getOrganizationAddress1());
		sb.append(", organizationAddress2=");
		sb.append(getOrganizationAddress2());
		sb.append(", organizationCity=");
		sb.append(getOrganizationCity());
		sb.append(", organizationPhone=");
		sb.append(getOrganizationPhone());
		sb.append(", top5HealthPlansByRev=");
		sb.append(getTop5HealthPlansByRev());
		sb.append(", clearinghouses=");
		sb.append(getClearinghouses());
		sb.append(", ehrBillingVendors=");
		sb.append(getEhrBillingVendors());
		sb.append(", revCycleVendors=");
		sb.append(getRevCycleVendors());
		sb.append(", top5DrgByRev=");
		sb.append(getTop5DrgByRev());
		sb.append(", icd9Drg1=");
		sb.append(getIcd9Drg1());
		sb.append(", icd9Drg2=");
		sb.append(getIcd9Drg2());
		sb.append(", icd9Drg3=");
		sb.append(getIcd9Drg3());
		sb.append(", icd9Drg4=");
		sb.append(getIcd9Drg4());
		sb.append(", icd9Drg5=");
		sb.append(getIcd9Drg5());
		sb.append(", top5Icd9ByRev=");
		sb.append(getTop5Icd9ByRev());
		sb.append(", icd9Dx1=");
		sb.append(getIcd9Dx1());
		sb.append(", icd9Dx2=");
		sb.append(getIcd9Dx2());
		sb.append(", icd9Dx3=");
		sb.append(getIcd9Dx3());
		sb.append(", icd9Dx4=");
		sb.append(getIcd9Dx4());
		sb.append(", icd9Dx5=");
		sb.append(getIcd9Dx5());
		sb.append(", primaryTestingContact=");
		sb.append(getPrimaryTestingContact());
		sb.append(", primaryTestingContactTitle=");
		sb.append(getPrimaryTestingContactTitle());
		sb.append(", primaryTestingContactPhone=");
		sb.append(getPrimaryTestingContactPhone());
		sb.append(", primaryTestingContactEmail=");
		sb.append(getPrimaryTestingContactEmail());
		sb.append(", primaryCodingContact=");
		sb.append(getPrimaryCodingContact());
		sb.append(", primaryCodingContactTitle=");
		sb.append(getPrimaryCodingContactTitle());
		sb.append(", primaryCodingContactPhone=");
		sb.append(getPrimaryCodingContactPhone());
		sb.append(", primaryCodingContactEmail=");
		sb.append(getPrimaryCodingContactEmail());
		sb.append(", primaryBillingContact=");
		sb.append(getPrimaryBillingContact());
		sb.append(", primaryBillingContactTitle=");
		sb.append(getPrimaryBillingContactTitle());
		sb.append(", primaryBillingContactPhone=");
		sb.append(getPrimaryBillingContactPhone());
		sb.append(", primaryBillingContactEmail=");
		sb.append(getPrimaryBillingContactEmail());
		sb.append(", file=");
		sb.append(getFile());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(133);

		sb.append("<model><model-name>");
		sb.append("com.virtusa.icd.service.builder.model.Enrollment");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>enrollmentId</column-name><column-value><![CDATA[");
		sb.append(getEnrollmentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>selectedEntityType</column-name><column-value><![CDATA[");
		sb.append(getSelectedEntityType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationNPINum</column-name><column-value><![CDATA[");
		sb.append(getOrganizationNPINum());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationName</column-name><column-value><![CDATA[");
		sb.append(getOrganizationName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationAddress1</column-name><column-value><![CDATA[");
		sb.append(getOrganizationAddress1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationAddress2</column-name><column-value><![CDATA[");
		sb.append(getOrganizationAddress2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationCity</column-name><column-value><![CDATA[");
		sb.append(getOrganizationCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationPhone</column-name><column-value><![CDATA[");
		sb.append(getOrganizationPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>top5HealthPlansByRev</column-name><column-value><![CDATA[");
		sb.append(getTop5HealthPlansByRev());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>clearinghouses</column-name><column-value><![CDATA[");
		sb.append(getClearinghouses());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ehrBillingVendors</column-name><column-value><![CDATA[");
		sb.append(getEhrBillingVendors());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>revCycleVendors</column-name><column-value><![CDATA[");
		sb.append(getRevCycleVendors());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>top5DrgByRev</column-name><column-value><![CDATA[");
		sb.append(getTop5DrgByRev());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>icd9Drg1</column-name><column-value><![CDATA[");
		sb.append(getIcd9Drg1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>icd9Drg2</column-name><column-value><![CDATA[");
		sb.append(getIcd9Drg2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>icd9Drg3</column-name><column-value><![CDATA[");
		sb.append(getIcd9Drg3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>icd9Drg4</column-name><column-value><![CDATA[");
		sb.append(getIcd9Drg4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>icd9Drg5</column-name><column-value><![CDATA[");
		sb.append(getIcd9Drg5());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>top5Icd9ByRev</column-name><column-value><![CDATA[");
		sb.append(getTop5Icd9ByRev());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>icd9Dx1</column-name><column-value><![CDATA[");
		sb.append(getIcd9Dx1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>icd9Dx2</column-name><column-value><![CDATA[");
		sb.append(getIcd9Dx2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>icd9Dx3</column-name><column-value><![CDATA[");
		sb.append(getIcd9Dx3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>icd9Dx4</column-name><column-value><![CDATA[");
		sb.append(getIcd9Dx4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>icd9Dx5</column-name><column-value><![CDATA[");
		sb.append(getIcd9Dx5());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryTestingContact</column-name><column-value><![CDATA[");
		sb.append(getPrimaryTestingContact());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryTestingContactTitle</column-name><column-value><![CDATA[");
		sb.append(getPrimaryTestingContactTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryTestingContactPhone</column-name><column-value><![CDATA[");
		sb.append(getPrimaryTestingContactPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryTestingContactEmail</column-name><column-value><![CDATA[");
		sb.append(getPrimaryTestingContactEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryCodingContact</column-name><column-value><![CDATA[");
		sb.append(getPrimaryCodingContact());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryCodingContactTitle</column-name><column-value><![CDATA[");
		sb.append(getPrimaryCodingContactTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryCodingContactPhone</column-name><column-value><![CDATA[");
		sb.append(getPrimaryCodingContactPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryCodingContactEmail</column-name><column-value><![CDATA[");
		sb.append(getPrimaryCodingContactEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryBillingContact</column-name><column-value><![CDATA[");
		sb.append(getPrimaryBillingContact());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryBillingContactTitle</column-name><column-value><![CDATA[");
		sb.append(getPrimaryBillingContactTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryBillingContactPhone</column-name><column-value><![CDATA[");
		sb.append(getPrimaryBillingContactPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryBillingContactEmail</column-name><column-value><![CDATA[");
		sb.append(getPrimaryBillingContactEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>file</column-name><column-value><![CDATA[");
		sb.append(getFile());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Enrollment.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Enrollment.class
		};
	private long _enrollmentId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _selectedEntityType;
	private String _organizationNPINum;
	private String _organizationName;
	private String _organizationAddress1;
	private String _organizationAddress2;
	private String _organizationCity;
	private String _organizationPhone;
	private String _top5HealthPlansByRev;
	private String _clearinghouses;
	private String _ehrBillingVendors;
	private String _revCycleVendors;
	private String _top5DrgByRev;
	private String _icd9Drg1;
	private String _icd9Drg2;
	private String _icd9Drg3;
	private String _icd9Drg4;
	private String _icd9Drg5;
	private String _top5Icd9ByRev;
	private String _icd9Dx1;
	private String _icd9Dx2;
	private String _icd9Dx3;
	private String _icd9Dx4;
	private String _icd9Dx5;
	private String _primaryTestingContact;
	private String _primaryTestingContactTitle;
	private String _primaryTestingContactPhone;
	private String _primaryTestingContactEmail;
	private String _primaryCodingContact;
	private String _primaryCodingContactTitle;
	private String _primaryCodingContactPhone;
	private String _primaryCodingContactEmail;
	private String _primaryBillingContact;
	private String _primaryBillingContactTitle;
	private String _primaryBillingContactPhone;
	private String _primaryBillingContactEmail;
	private String _file;
	private Enrollment _escapedModelProxy;
}