/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.virtusa.icd.service.builder.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.GroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the References service. Represents a row in the &quot;ICD_References&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.virtusa.icd.service.builder.model.impl.ReferencesModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.virtusa.icd.service.builder.model.impl.ReferencesImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see References
 * @see com.virtusa.icd.service.builder.model.impl.ReferencesImpl
 * @see com.virtusa.icd.service.builder.model.impl.ReferencesModelImpl
 * @generated
 */
public interface ReferencesModel extends BaseModel<References>, GroupedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a references model instance should use the {@link References} interface instead.
	 */

	/**
	 * Returns the primary key of this references.
	 *
	 * @return the primary key of this references
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this references.
	 *
	 * @param primaryKey the primary key of this references
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the references ID of this references.
	 *
	 * @return the references ID of this references
	 */
	public long getReferencesId();

	/**
	 * Sets the references ID of this references.
	 *
	 * @param referencesId the references ID of this references
	 */
	public void setReferencesId(long referencesId);

	/**
	 * Returns the group ID of this references.
	 *
	 * @return the group ID of this references
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this references.
	 *
	 * @param groupId the group ID of this references
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this references.
	 *
	 * @return the company ID of this references
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this references.
	 *
	 * @param companyId the company ID of this references
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this references.
	 *
	 * @return the user ID of this references
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this references.
	 *
	 * @param userId the user ID of this references
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this references.
	 *
	 * @return the user uuid of this references
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this references.
	 *
	 * @param userUuid the user uuid of this references
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this references.
	 *
	 * @return the user name of this references
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this references.
	 *
	 * @param userName the user name of this references
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create date of this references.
	 *
	 * @return the create date of this references
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this references.
	 *
	 * @param createDate the create date of this references
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this references.
	 *
	 * @return the modified date of this references
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this references.
	 *
	 * @param modifiedDate the modified date of this references
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the references name of this references.
	 *
	 * @return the references name of this references
	 */
	@AutoEscape
	public String getReferencesName();

	/**
	 * Sets the references name of this references.
	 *
	 * @param referencesName the references name of this references
	 */
	public void setReferencesName(String referencesName);

	/**
	 * Returns the key of this references.
	 *
	 * @return the key of this references
	 */
	@AutoEscape
	public String getKey();

	/**
	 * Sets the key of this references.
	 *
	 * @param key the key of this references
	 */
	public void setKey(String key);

	/**
	 * Returns the value of this references.
	 *
	 * @return the value of this references
	 */
	@AutoEscape
	public String getValue();

	/**
	 * Sets the value of this references.
	 *
	 * @param value the value of this references
	 */
	public void setValue(String value);

	/**
	 * Returns the active of this references.
	 *
	 * @return the active of this references
	 */
	@AutoEscape
	public String getActive();

	/**
	 * Sets the active of this references.
	 *
	 * @param active the active of this references
	 */
	public void setActive(String active);

	/**
	 * Returns the order of this references.
	 *
	 * @return the order of this references
	 */
	public int getOrder();

	/**
	 * Sets the order of this references.
	 *
	 * @param order the order of this references
	 */
	public void setOrder(int order);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(References references);

	public int hashCode();

	public CacheModel<References> toCacheModel();

	public References toEscapedModel();

	public String toString();

	public String toXmlString();
}